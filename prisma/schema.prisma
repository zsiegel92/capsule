generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("POSTGRES_PRISMA_URL")
  directUrl         = env("POSTGRES_URL_NON_POOLING")
  shadowDatabaseUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id              Int              @id @default(autoincrement())
  email           String           @unique
  password        String
  firstName       String
  partnerRequests PartnerRequest[] @relation("PartnerRequest")
  partnershipId   Int?
  partnership    Partnership?    @relation("Partnership", fields: [partnershipId], references: [id])
  authoredPosts           Post[] @relation("AuthoredPosts")
}

model PartnerRequest {
  id        Int      @id @default(autoincrement())
  toEmail   String
  fromId    Int
  createdAt DateTime @default(now())
  from      User     @relation("PartnerRequest", fields: [fromId], references: [id])

  @@unique([toEmail, fromId])
}

// model Partnership {
//   id        Int      @id @default(autoincrement())
//   partners  User[]   @relation("Partnership")
//   createdAt DateTime @default(now())


//   @@unique([toEmail, fromId])
// }


model Partnership {
  id        Int      @id @default(autoincrement())
  partners  User[]   @relation("Partnership")
  createdAt DateTime @default(now())
  posts     Post[]   @relation("PartnershipOfPost")
}

model Post {
  id        Int      @id @default(autoincrement())
  title     String
  content   String
  createdAt DateTime @default(now())
  authorId  Int
  author    User     @relation("AuthoredPosts", fields: [authorId], references: [id])
  partnership Partnership @relation("PartnershipOfPost", fields: [partnershipId], references: [id])
  partnershipId Int
}